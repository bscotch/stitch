{
  "name": "bscotch-stitch-vscode",
  "displayName": "Stitch",
  "version": "1.70.0",
  "private": true,
  "description": "GameMaker Language (GML) support and related tools for Visual Studio Code",
  "categories": [
    "Programming Languages",
    "Formatters",
    "Snippets",
    "Themes"
  ],
  "keywords": [
    "gamemaker"
  ],
  "homepage": "https://github.com/bscotch/stitch/tree/develop/packages/vscode#readme",
  "bugs": {
    "url": "https://github.com/bscotch/stitch/issues?q=is%3Aissue+is%3Aopen+label%3A%22%3Akeyboard%3A+vscode%22"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bscotch/stitch.git",
    "directory": "packages/vscode"
  },
  "license": "SEE LICENSE IN LICENSE.md",
  "qna": false,
  "publisher": "bscotch",
  "main": "./dist/extension.js",
  "scripts": {
    "build": "pnpm build:grammar && node scripts/build-schemas.mjs && pnpm build:webviews && node scripts/build.mjs && pnpm build:manifest",
    "build:deps": "pnpm turbo run build --filter=bscotch-stitch-vscode...",
    "build:grammar": "node scripts/yaml-to-json.mjs syntaxes/gml.tmLanguage.yaml syntaxes/gml.tmLanguage.json",
    "build:manifest": "node dist/manifest.update.js && prettier -w package.json",
    "build:webviews": "cd webviews && pnpm build",
    "bump": "cd ../.. && pnpm bump",
    "package": "vsce package --no-dependencies --githubBranch develop",
    "vscode:prepublish": "pnpm build",
    "vscode:publish": "vsce publish --no-dependencies --githubBranch develop",
    "watch": "nodemon --delay 1 -e js,cjs,mjs,ts,mts,cts,yaml,html,css,svelte --watch src --watch webviews/src --watch syntaxes --watch ../parser/dist --watch ../sprite-source/dist --ignore src/icons.types.mts --exec \"pnpm build\"",
    "watch:grammar": "nodemon --delay 1 --watch syntaxes/gml.tmLanguage.yaml --exec \"pnpm build:grammar\""
  },
  "contributes": {
    "commands": [
      {
        "command": "stitch.openDocs",
        "title": "Stitch: Open GameMaker Docs"
      },
      {
        "command": "stitch.newProject",
        "title": "Stitch: New Project"
      },
      {
        "command": "stitch.diagnostics.suppress",
        "title": "Suppress Diagnostics"
      },
      {
        "command": "stitch.openLocation.gameMaker",
        "title": "Stitch: Open GameMaker Location"
      },
      {
        "command": "stitch.openLocation.saveDirectory",
        "title": "Stitch: Open Save Directory",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.openLocation.stitch",
        "title": "Stitch: Open Stitch Location"
      },
      {
        "command": "stitch.setGameMakerVersion",
        "title": "Stitch: Set GameMaker Version",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.assets.rename",
        "title": "Rename...",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.assets.reveal",
        "title": "Stitch: Show Asset in Tree",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.assets.filters.enable",
        "icon": "$(filter)",
        "title": "Enable Filter"
      },
      {
        "command": "stitch.assets.filters.disable",
        "icon": "$(filter-filled)",
        "title": "Disable Filter"
      },
      {
        "command": "stitch.assets.filters.edit",
        "title": "Edit Filter"
      },
      {
        "command": "stitch.assets.filters.new",
        "icon": "$(add)",
        "title": "New Filter..."
      },
      {
        "command": "stitch.assets.filters.delete",
        "icon": "$(close)",
        "title": "Delete Filter"
      },
      {
        "command": "stitch.assets.import",
        "title": "Stitch: Import Assets",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.assets.renameFolder",
        "title": "Rename..."
      },
      {
        "command": "stitch.assets.deleteFolder",
        "title": "Delete"
      },
      {
        "command": "stitch.assets.editSprite",
        "title": "Edit..."
      },
      {
        "command": "stitch.assets.editSound",
        "title": "Edit..."
      },
      {
        "command": "stitch.assets.delete",
        "title": "Delete",
        "icon": "$(close)"
      },
      {
        "command": "stitch.assets.duplicate",
        "title": "Duplicate"
      },
      {
        "command": "stitch.assets.newScript",
        "title": "New Script..."
      },
      {
        "command": "stitch.assets.newObject",
        "title": "New Object..."
      },
      {
        "command": "stitch.assets.newSprite",
        "title": "New Sprite from Folder..."
      },
      {
        "command": "stitch.assets.newSpriteFromImage",
        "title": "New Sprite from Image..."
      },
      {
        "command": "stitch.assets.newSound",
        "title": "Add/Update Sounds..."
      },
      {
        "command": "stitch.assets.newRoom",
        "title": "New Room..."
      },
      {
        "command": "stitch.assets.newShader",
        "title": "New Shader..."
      },
      {
        "command": "stitch.assets.newFolder",
        "title": "New Group...",
        "icon": "$(new-folder)"
      },
      {
        "command": "stitch.assets.addRoomInstance",
        "title": "Add Instance..."
      },
      {
        "command": "stitch.assets.deleteRoomInstance",
        "title": "Delete"
      },
      {
        "command": "stitch.assets.replaceSpriteFrames",
        "title": "Replace Frames..."
      },
      {
        "command": "stitch.assets.deleteSpriteFrame",
        "title": "Delete"
      },
      {
        "command": "stitch.assets.setParent",
        "title": "Set Parent..."
      },
      {
        "command": "stitch.assets.setSprite",
        "title": "Set Sprite..."
      },
      {
        "command": "stitch.assets.newEvent",
        "title": "New Event..."
      },
      {
        "command": "stitch.assets.deleteCode",
        "title": "Delete"
      },
      {
        "command": "stitch.openIde",
        "title": "Stitch: Open in GameMaker",
        "shortTitle": "Open in GameMaker",
        "enablement": "stitch.projectCount > 0",
        "icon": "$(edit)"
      },
      {
        "command": "stitch.runner.toggleSearchWidget",
        "title": "Toggle Search Widget",
        "icon": "$(search)",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.runner.refresh",
        "title": "Refresh",
        "icon": "$(sync)",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.stop",
        "title": "Stitch: Stop Runner",
        "shortTitle": "Stop",
        "icon": "$(debug-stop)",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.run",
        "title": "Stitch: Run Project",
        "shortTitle": "Run",
        "icon": "$(play)",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.run.noDefaults",
        "title": "Stitch: Run Project (No Defaults)",
        "shortTitle": "RunExt",
        "icon": "$(run-all)",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.clean",
        "title": "Stitch: Clean Project Cache",
        "shortTitle": "Clean Cache",
        "icon": "$(discard)",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.types.copy",
        "title": "Stitch: Copy Type"
      },
      {
        "command": "stitch.types.copyAsJsdocType",
        "title": "Stitch: Copy @type"
      },
      {
        "command": "stitch.types.copyAsJsdocSelf",
        "title": "Stitch: Copy @self"
      },
      {
        "command": "stitch.includedFiles.revealInExplorerView",
        "title": "Reveal in Explorer View"
      },
      {
        "command": "stitch.spriteSource.clearRecentImports",
        "title": "Clear Recent Imports",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.spriteSource.clearCache",
        "title": "Clear Sprite Info Cache",
        "enablement": "stitch.projectCount > 0",
        "icon": "$(discard)"
      },
      {
        "command": "stitch.spriteSource.addStage",
        "title": "Add Stage...",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.spriteSource.watch",
        "title": "Start watching",
        "icon": "$(eye-closed)",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.spriteSource.unwatch",
        "title": "Stop watching",
        "icon": "$(eye)",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.spriteSource.create",
        "title": "Add Sprite Source...",
        "enablement": "stitch.projectCount > 0",
        "icon": "$(add)"
      },
      {
        "command": "stitch.spriteSource.import",
        "title": "Import Changes",
        "enablement": "stitch.projectCount > 0",
        "icon": "$(arrow-circle-up)"
      },
      {
        "command": "stitch.spriteSource.edit",
        "title": "Edit Sources...",
        "enablement": "stitch.projectCount > 0",
        "icon": "$(edit)"
      },
      {
        "command": "stitch.spriteSource.delete",
        "title": "Delete",
        "enablement": "stitch.projectCount > 0",
        "icon": "$(close)"
      },
      {
        "command": "stitch.spriteSource.openExplorer",
        "title": "Reveal in File Explorer"
      }
    ],
    "configuration": {
      "title": "Stitch",
      "properties": {
        "stitch.assets.filters.openAllFolders": {
          "title": "Open all folders when filtering",
          "description": "When filtering assets, you may want all folders to be auto-opened in the sidebar to reveal filtered results. This is disabled by default since there can be a very large number of filter results!",
          "type": "boolean",
          "default": false
        },
        "stitch.diagnostics.autoDeclaredGlobalsPatterns": {
          "title": "Prefixes for auto-declared globals",
          "description": "Variables with these prefixes will be automatically declared as globals if they are't declared in the user code.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "stitch.diagnostics.suppressGroups": {
          "title": "Suppress diagnostics in groups",
          "type": "array",
          "items": {
            "type": "string",
            "examples": [
              "path/to/my/group"
            ]
          },
          "default": [],
          "description": "Add asset groups (folders) to this list to suppress diagnostics from assets in these groups. Specify groups using their full path."
        },
        "stitch.sprites.editor.minInitialWidth": {
          "title": "Minimum initial sprite preview width",
          "description": "When opening a sprite in the Stitch editor, the image zoom will be set to ensure that the sprite is at least this many pixels wide.",
          "type": "number",
          "default": 128
        },
        "stitch.sprites.sources.watchOnStartup": {
          "title": "Watch sprite sources on startup",
          "description": "Whether to start watching sprite sources when Stitch starts up.",
          "type": "boolean",
          "default": false
        },
        "stitch.sprites.sources.watcherDebounceInterval": {
          "title": "Sprite source watcher debounce interval",
          "description": "The interval in milliseconds to wait after a file change before processing the changes. Increase this if auto-imports are triggering before exports complete.",
          "type": "number",
          "default": 1000
        },
        "stitch.sprites.sources.sortChangesBy": {
          "title": "Sort sprite changes",
          "enum": [
            "recency",
            "name"
          ],
          "default": "name"
        },
        "stitch.sprites.cleanOnSpineSpriteChange": {
          "title": "Autoclean when spine sprites change",
          "type": "boolean",
          "default": false,
          "description": "Changes to spine sprites typically require a cache-clean. Setting this to `true` will automatically clean the cache when a spine sprite is changed."
        },
        "stitch.gameMaker.releases.notes.channels": {
          "title": "GameMaker Release Channels",
          "type": "array",
          "default": [
            "lts",
            "stable",
            "beta"
          ],
          "items": {
            "type": "string",
            "enum": [
              "lts",
              "stable",
              "beta",
              "unstable"
            ]
          },
          "description": "Which GameMaker release notes channels to show in the GameMaker version picker and other locations."
        },
        "stitch.editing.autocomplete.ignoredPrefix": {
          "title": "Ignore autocomplete prefix",
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Variables with this prefix will be skipped in autocomplete suggestions, unless those variables are within the same scope or file as the active editor."
        },
        "stitch.editing.workspaceSymbols.includeInstanceVariables": {
          "title": "Include instance variables in workspace symbols",
          "type": "boolean",
          "default": true,
          "description": "Whether to include object/instance, constructor, and mixin variables in the workspace symbols list."
        },
        "stitch.editing.workspaceSymbols.includeLocalVariables": {
          "title": "Include local variables in workspace symbols",
          "type": "boolean",
          "default": true,
          "description": "Whether to include local variables in the workspace symbols list. Only symbols from the active editor are included."
        },
        "stitch.editing.workspaceSymbols.maxResults": {
          "title": "Maximum workspace symbols results",
          "type": "number",
          "default": 30,
          "description": "When searching workspace symbols, the maximum number that Stitch will contribute. Decrease this value if you have performance issue with the workspace symbols list."
        },
        "stitch.editing.signatureStatus.enable": {
          "title": "Enable signature status",
          "type": "boolean",
          "default": true,
          "description": "Stitch adds a statusbar item showing a function signature helper, replicating the functionality of the GameMaker IDE. This can be disabled."
        },
        "stitch.editing.signatureStatus.alignment": {
          "title": "Signature status alignment",
          "type": "string",
          "enum": [
            "left",
            "right"
          ],
          "default": "right",
          "description": "Whether the statusbar will show the function signature helper on the left or right side."
        },
        "stitch.run.killOthers": {
          "title": "Kill other runner instances",
          "description": "If true, when you run a project in Stitch it will first kill any other running instances of the same project.",
          "type": "boolean",
          "default": true
        },
        "stitch.run.defaultCompiler": {
          "title": "Default GameMaker compiler",
          "enum": [
            "vm",
            "yyc"
          ],
          "default": "vm"
        },
        "stitch.run.inTerminal": {
          "title": "Run in terminal",
          "description": "If true, when you run a project in Stitch it will run in a terminal window. When false, it will run internally and log to a webview (more feature-rich but potentially less performant).",
          "type": "boolean",
          "default": true
        },
        "stitch.runView.fontFamily": {
          "title": "Runner View Font Family",
          "type": "string",
          "default": "",
          "description": "The font family to use in the runner view. If not set, the default font will be used."
        },
        "stitch.runView.fontSize": {
          "title": "Runner View Font Size",
          "type": "number",
          "default": 0,
          "description": "The font size to use in the runner view. If 0, the default size will be used."
        },
        "stitch.editing.reprocessOnTypeDelay": {
          "title": "Reprocess on type delay",
          "type": "number",
          "default": 50,
          "description": "The delay in milliseconds to wait after a keypress before reprocessing the document. This is used to avoid reprocessing the document while the user is typing. Increase this value if the editor is feeling sluggish. Decrease this value if you want syntax highlighting to update faster."
        },
        "stitch.editing.externalChangeDelay": {
          "title": "Reprocess on external change delay",
          "type": "number",
          "default": 100,
          "description": "The delay in milliseconds to wait after a file is changed on disk before processing it. Increase this number if you are getting weird results when files change externally to VSCode and Stitch."
        },
        "stitch.run.defaultConfig": {
          "title": "Default GameMaker config",
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "The default project config to use for the GameMaker runtime. If not set, the first child config will be used. If no configs are found, the Default will be used. This can also be set via the `config` property on a task."
        },
        "stitch.yy.format.enable": {
          "title": "Enable yy/yyp formatting",
          "type": "boolean",
          "default": true,
          "description": "Enable/disable formatting of GameMaker `.yy` and `.yyp` files."
        }
      }
    },
    "grammars": [
      {
        "language": "yy",
        "scopeName": "source.yyp",
        "path": "./syntaxes/yyp.tmLanguage.json"
      },
      {
        "language": "gml",
        "scopeName": "source.gml",
        "path": "./syntaxes/gml.tmLanguage.json",
        "embeddedLanguages": {
          "comment.block.documentation.gml": "gml-jsdoc"
        }
      },
      {
        "language": "stitch-logs",
        "scopeName": "source.stitch-logs",
        "path": "./syntaxes/logs.tmLanguage.json"
      }
    ],
    "iconThemes": [
      {
        "id": "stitch-icon-theme",
        "label": "Stitch Icons",
        "path": "./images/icon-theme.json"
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "stitch.config.json",
        "url": "https://raw.githubusercontent.com/bscotch/stitch/develop/packages/config/schemas/stitch.config.schema.json"
      },
      {
        "fileMatch": ".stitch/sprites.info.json",
        "url": "./schemas/stitch.sprite-cache.schema.json"
      },
      {
        "fileMatch": ".stitch/sprites.import.json",
        "url": "./schemas/stitch.sprite-imports.schema.json"
      },
      {
        "fileMatch": ".stitch/sprites.source.json",
        "url": "./schemas/stitch.sprite-source.schema.json"
      }
    ],
    "keybindings": [
      {
        "command": "-debug.openView",
        "key": "f5",
        "when": "editorTextFocus && !editorReadonly && resourceExtname =~ /\\.(yy|yyp|gml)$/"
      },
      {
        "command": "-workbench.action.debug.start",
        "key": "f5",
        "when": "editorTextFocus && !editorReadonly && resourceExtname =~ /\\.(yy|yyp|gml)$/"
      },
      {
        "command": "-workbench.action.debug.continue",
        "key": "f5",
        "when": "editorTextFocus && !editorReadonly && resourceExtname =~ /\\.(yy|yyp|gml)$/"
      },
      {
        "command": "stitch.run",
        "key": "f5",
        "when": "(editorTextFocus && resourceExtname =~ /\\.(yy|yyp|gml)$/) || view == bscotch-stitch-resources"
      },
      {
        "command": "stitch.run.noDefaults",
        "key": "shift+f5",
        "when": "(editorTextFocus && resourceExtname =~ /\\.(yy|yyp|gml)$/) || view == bscotch-stitch-resources"
      },
      {
        "command": "stitch.assets.rename",
        "key": "f2",
        "when": "view == bscotch-stitch-resources && viewItem =~ /^asset-/"
      },
      {
        "command": "stitch.openDocs",
        "key": "f12",
        "when": "editorTextFocus && resourceExtname =~ /\\.gml$/ && stitch.selectionIsNative",
        "args": {
          "from": "keybind"
        }
      },
      {
        "command": "stitch.assets.editSprite",
        "key": "f12",
        "when": "editorTextFocus && resourceExtname =~ /\\.gml$/ && stitch.selectionIsSprite"
      },
      {
        "command": "stitch.assets.editSound",
        "key": "f12",
        "when": "editorTextFocus && resourceExtname =~ /\\.gml$/ && stitch.selectionIsSound"
      }
    ],
    "languages": [
      {
        "id": "yy",
        "aliases": [
          "GameMaker Metadata",
          "yy",
          "yyp"
        ],
        "configuration": "./languages/gml.language-configuration.json",
        "extensions": [
          ".yy",
          ".yyp"
        ]
      },
      {
        "id": "gml",
        "aliases": [
          "GameMaker Language",
          "gml"
        ],
        "extensions": [
          ".gml"
        ],
        "configuration": "./languages/gml.language-configuration.json"
      },
      {
        "id": "stitch-logs",
        "configuration": "./languages/logs.language-configuration.json"
      },
      {
        "id": "gml-jsdoc",
        "configuration": "./languages/jsdoc.language-configuration.json"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "stitch.assets.newFolder",
          "when": "view == bscotch-stitch-resources && stitch.projectCount == 1",
          "group": "navigation@1"
        },
        {
          "command": "stitch.openIde",
          "when": "view == bscotch-stitch-resources && stitch.projectCount == 1",
          "group": "navigation@3"
        },
        {
          "command": "stitch.runner.toggleSearchWidget",
          "when": "view == bscotch-stitch-igor",
          "group": "navigation@1"
        },
        {
          "command": "stitch.runner.refresh",
          "when": "view == bscotch-stitch-igor",
          "group": "navigation@2"
        },
        {
          "command": "stitch.stop",
          "when": "view == bscotch-stitch-igor || (view == bscotch-stitch-resources && config.stitch.run.inTerminal)",
          "group": "navigation@3"
        },
        {
          "command": "stitch.run",
          "when": "view == bscotch-stitch-igor || (view == bscotch-stitch-resources && config.stitch.run.inTerminal)",
          "group": "navigation@5"
        },
        {
          "command": "stitch.run.noDefaults",
          "when": "view == bscotch-stitch-igor || (view == bscotch-stitch-resources && config.stitch.run.inTerminal)",
          "group": "navigation@4"
        },
        {
          "command": "stitch.clean",
          "when": "view == bscotch-stitch-igor || (view == bscotch-stitch-resources && config.stitch.run.inTerminal)",
          "group": "navigation@3"
        },
        {
          "command": "stitch.spriteSource.clearCache",
          "when": "view == bscotch-stitch-sprite-sources",
          "group": "navigation@1"
        },
        {
          "command": "stitch.spriteSource.create",
          "when": "view == bscotch-stitch-sprite-sources",
          "group": "navigation@2"
        },
        {
          "command": "stitch.spriteSource.import",
          "when": "view == bscotch-stitch-sprite-sources",
          "group": "navigation@4"
        },
        {
          "command": "stitch.spriteSource.edit",
          "when": "view == bscotch-stitch-sprite-sources",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "stitch.diagnostics.suppress",
          "when": "viewItem == folder",
          "group": "1_stitch@9"
        },
        {
          "command": "stitch.assets.rename",
          "when": "viewItem =~ /^asset-/",
          "group": "7_modification@1"
        },
        {
          "command": "stitch.assets.filters.enable",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == tree-filter-disabled",
          "group": "inline@1"
        },
        {
          "command": "stitch.assets.filters.disable",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == tree-filter-enabled",
          "group": "inline@1"
        },
        {
          "command": "stitch.assets.filters.new",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == tree-filter-group",
          "group": "inline@1"
        },
        {
          "command": "stitch.assets.filters.delete",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem =~ /^tree-filter-(enabled|disabled)/",
          "group": "inline@2"
        },
        {
          "command": "stitch.assets.renameFolder",
          "when": "viewItem == folder",
          "group": "7_modification@1"
        },
        {
          "command": "stitch.assets.deleteFolder",
          "when": "viewItem == folder",
          "group": "7_modification@9"
        },
        {
          "command": "stitch.assets.editSprite",
          "when": "viewItem == asset-sprites",
          "group": "7_modification@1"
        },
        {
          "command": "stitch.assets.delete",
          "when": "viewItem =~ /^asset-/",
          "group": "7_modification@9"
        },
        {
          "command": "stitch.assets.duplicate",
          "when": "viewItem =~ /^asset-/",
          "group": "7_modification@1"
        },
        {
          "command": "stitch.assets.newScript",
          "when": "viewItem == folder",
          "group": "navigation@1"
        },
        {
          "command": "stitch.assets.newObject",
          "when": "viewItem == folder",
          "group": "navigation@2"
        },
        {
          "command": "stitch.assets.newSprite",
          "when": "viewItem == folder && isWindows",
          "group": "navigation@3"
        },
        {
          "command": "stitch.assets.newSpriteFromImage",
          "when": "viewItem == folder",
          "group": "navigation@4"
        },
        {
          "command": "stitch.assets.newSound",
          "when": "viewItem == folder",
          "group": "navigation@5"
        },
        {
          "command": "stitch.assets.newRoom",
          "when": "viewItem == folder",
          "group": "navigation@6"
        },
        {
          "command": "stitch.assets.newShader",
          "when": "viewItem == folder",
          "group": "navigation@7"
        },
        {
          "command": "stitch.assets.newFolder",
          "when": "viewItem == folder",
          "group": "navigation@9"
        },
        {
          "command": "stitch.assets.newFolder",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == project",
          "group": "inline@1"
        },
        {
          "command": "stitch.assets.addRoomInstance",
          "when": "viewItem == asset-rooms",
          "group": "navigation@1"
        },
        {
          "command": "stitch.assets.deleteRoomInstance",
          "when": "viewItem == room-instance",
          "group": "navigation@1"
        },
        {
          "command": "stitch.assets.replaceSpriteFrames",
          "when": "viewItem == asset-sprites && isWindows",
          "group": "7_modification@1"
        },
        {
          "command": "stitch.assets.deleteSpriteFrame",
          "when": "viewItem == sprite-frame && view == bscotch-stitch-resources",
          "group": "7_modification@9"
        },
        {
          "command": "stitch.assets.setParent",
          "when": "(view == bscotch-stitch-resources && viewItem == asset-objects) || (view == bscotch-stitch-inspector && viewItem == inspector-object-parents)",
          "group": "navigation@1"
        },
        {
          "command": "stitch.assets.setSprite",
          "when": "(view == bscotch-stitch-resources && viewItem == asset-objects) || (view == bscotch-stitch-inspector && viewItem == inspector-object-sprites)",
          "group": "navigation@1"
        },
        {
          "command": "stitch.assets.newEvent",
          "when": "(view == bscotch-stitch-resources && viewItem == asset-objects) || (view == bscotch-stitch-inspector && viewItem == inspector-object-events)",
          "group": "navigation@1"
        },
        {
          "command": "stitch.assets.deleteCode",
          "when": "viewItem == code || viewItem == inspector-object-events",
          "group": "7_modification@9"
        },
        {
          "command": "stitch.openIde",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == project",
          "group": "inline@3"
        },
        {
          "command": "stitch.stop",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == project",
          "group": "inline@3"
        },
        {
          "command": "stitch.run",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == project",
          "group": "inline@5"
        },
        {
          "command": "stitch.run.noDefaults",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == project",
          "group": "inline@4"
        },
        {
          "command": "stitch.clean",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == project",
          "group": "inline@3"
        },
        {
          "command": "stitch.includedFiles.revealInExplorerView",
          "when": "viewItem == datafiles-file",
          "group": "navigation@9"
        },
        {
          "command": "stitch.spriteSource.clearRecentImports",
          "when": "viewItem == sprites && view == bscotch-stitch-sprite-sources",
          "group": "7_modification@8"
        },
        {
          "command": "stitch.spriteSource.clearCache",
          "when": "viewItem =~ /^sprite-source(-(un)?watched)?$/",
          "group": "navigation@8"
        },
        {
          "command": "stitch.spriteSource.addStage",
          "when": "viewItem =~ /^sprite-source(-(un)?watched)?$/",
          "group": "navigation@1"
        },
        {
          "command": "stitch.spriteSource.watch",
          "when": "viewItem == sprite-source-unwatched",
          "group": "inline@1"
        },
        {
          "command": "stitch.spriteSource.unwatch",
          "when": "viewItem == sprite-source-watched",
          "group": "inline@1"
        },
        {
          "command": "stitch.spriteSource.delete",
          "when": "viewItem =~ /^sprite-source(-(un)?watched)?$/",
          "group": "7_modification@9"
        },
        {
          "command": "stitch.spriteSource.openExplorer",
          "when": "viewItem =~ /^sprite-source(-(un)?watched)?$/ || viewItem =~ /^sprite-source-stage-/",
          "group": "navigation@9"
        }
      ],
      "explorer/context": [
        {
          "command": "stitch.openIde",
          "group": "navigation@3",
          "when": "resourceExtname =~ /\\.(yy|yyp|gml)$/"
        }
      ],
      "commandPalette": [
        {
          "command": "stitch.openDocs"
        },
        {
          "command": "stitch.newProject"
        },
        {
          "command": "stitch.openLocation.gameMaker"
        },
        {
          "command": "stitch.openLocation.saveDirectory"
        },
        {
          "command": "stitch.openLocation.stitch"
        },
        {
          "command": "stitch.setGameMakerVersion"
        },
        {
          "command": "stitch.assets.reveal"
        },
        {
          "command": "stitch.assets.import"
        },
        {
          "command": "stitch.openIde"
        },
        {
          "command": "stitch.stop"
        },
        {
          "command": "stitch.run"
        },
        {
          "command": "stitch.run.noDefaults"
        },
        {
          "command": "stitch.clean"
        }
      ],
      "editor/context": [
        {
          "command": "stitch.types.copy",
          "when": "resourceExtname == .gml",
          "group": "1_stitch@1"
        },
        {
          "command": "stitch.types.copyAsJsdocType",
          "when": "resourceExtname == .gml",
          "group": "1_stitch@2"
        },
        {
          "command": "stitch.types.copyAsJsdocSelf",
          "when": "resourceExtname == .gml",
          "group": "1_stitch@3"
        }
      ]
    },
    "semanticTokenModifiers": [
      {
        "id": "global",
        "description": "Global"
      },
      {
        "id": "asset",
        "description": "A subset of global variables representing a GameMaker asset."
      },
      {
        "id": "local",
        "description": "A local variable."
      }
    ],
    "snippets": [
      {
        "language": "gml",
        "path": "./snippets/gml.code-snippets"
      }
    ],
    "themes": [
      {
        "id": "stitch-theme-bscotchseth",
        "label": "Stitch (Seth's Theme)",
        "path": "./themes/stitch-bscotchseth.json",
        "uiTheme": "vs-dark"
      }
    ],
    "views": {
      "bscotch-stitch": [
        {
          "id": "bscotch-stitch-inspector",
          "name": "Inspector",
          "icon": "./images/stitch-logo-mono.svg",
          "type": "tree",
          "contextualTitle": "Stitch:Inspector"
        },
        {
          "id": "bscotch-stitch-files",
          "name": "Included Files",
          "icon": "./images/stitch-logo-mono.svg",
          "type": "tree",
          "contextualTitle": "Stitch:Files"
        },
        {
          "id": "bscotch-stitch-resources",
          "name": "Resources",
          "icon": "./images/stitch-logo-mono.svg",
          "type": "tree",
          "contextualTitle": "Stitch:Resources"
        },
        {
          "id": "bscotch-stitch-igor",
          "name": "Runner",
          "icon": "./images/stitch-logo-mono.svg",
          "type": "webview",
          "contextualTitle": "Stitch:Runner"
        },
        {
          "id": "bscotch-stitch-sprite-sources",
          "name": "Sprite Sources",
          "icon": "./images/stitch-logo-mono.svg",
          "type": "tree",
          "contextualTitle": "Stitch:SpriteSources"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "bscotch-stitch",
          "title": "Stitch",
          "icon": "./images/stitch-logo-mono.svg"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "bscotch-stitch-sprite-sources",
        "contents": "A \"sprite source\" is a folder of images, or a folder of folders-of-images, representing sprites (folders) and their frames (images). Stitch can batch-import and update sprites from sprites sources."
      },
      {
        "view": "bscotch-stitch-resources",
        "contents": "The resources view is a tree of all assets in your project, including objects, sprites, sounds, and more. You can create, edit, and delete assets from this view."
      },
      {
        "view": "bscotch-stitch-inspector",
        "contents": "The inspector view shows detailed information about the currently selected asset in the resources view, for certain asset types."
      },
      {
        "view": "bscotch-stitch-files",
        "contents": "The Included Files view shows all datafiles included in your project."
      },
      {
        "view": "bscotch-stitch-igor",
        "contents": "The Runner view shows the output logs of your game when you run it from Stitch. By default the terminal is used instead of this panel."
      }
    ]
  },
  "activationEvents": [
    "onLanguage:gml",
    "onCommand:stitch.openIde",
    "workspaceContains:**/*.{yyp,yy,gml}"
  ],
  "dependencies": {
    "tslib": "^2.6.2"
  },
  "devDependencies": {
    "@bscotch/emitter": "0.2.1",
    "@bscotch/gamemaker-releases": "workspace:*",
    "@bscotch/gml-parser": "workspace:*",
    "@bscotch/pathy": "^2.12.0",
    "@bscotch/sprite-source": "workspace:*",
    "@bscotch/stitch-config": "workspace:*",
    "@bscotch/stitch-launcher": "workspace:*",
    "@bscotch/trebuchet": "2.9.4",
    "@bscotch/utility": "^7.2.0",
    "@bscotch/yy": "workspace:*",
    "@esotericsoftware/spine-player": "4.2.39",
    "@local-vscode/shared": "workspace:*",
    "@local-vscode/webviews": "workspace:*",
    "@types/plist": "3.0.5",
    "@types/vscode": "1.88.0",
    "@types/xml2js": "0.4.14",
    "@vscode/vsce": "2.26.0",
    "dotenv": "16.4.5",
    "esbuild": "^0.20.2",
    "glob": "10.3.12",
    "nodemon": "^3.1.0",
    "plist": "3.1.0",
    "turbo": "^1.13.3",
    "typescript": "5.5.0-beta",
    "xml2js": "0.6.2",
    "yaml": "2.4.2",
    "zod": "^3.23.4",
    "zod-to-json-schema": "3.23.0",
    "zx": "^8.0.2"
  },
  "engines": {
    "vscode": "^1.88.0"
  },
  "icon": "./images/stitch-logo.png",
  "galleryBanner": {
    "color": "#37183c",
    "theme": "dark"
  },
  "preview": false,
  "capabilities": {
    "referencesProvider": "true",
    "definitionProvider": "true",
    "typeDefinitionProvider": "true",
    "documentFormattingProvider": "true",
    "renameProvider": "true",
    "completionProvider": {
      "resolveProvider": "true",
      "triggerCharacters": [
        ".",
        "{",
        "<",
        "|"
      ]
    },
    "signatureHelpProvider": {
      "triggerCharacters": [
        "("
      ]
    },
    "hoverProvider": "true",
    "codeLensProvider": {
      "resolveProvider": "true"
    }
  }
}
